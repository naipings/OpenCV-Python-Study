# 图像矩
import cv2
import numpy as np
import matplotlib
matplotlib.use('TkAgg')
import matplotlib.pyplot as plt

# 在数学中，矩表示函数形状的特定定量测量。
# 而在计算机数据领域，图像矩可以视为图像像素强度的加权平均值，其编码了图像的一些特性。
# 因此，图像矩可用于描述检测到的轮廓的一些性质(例如，物体的质心，或物体的区域等)。
# OpenCV中提供了 cv2.moments()函数用于计算向量形状或栅格化形状的三阶矩，函数用法如下：
# retval = cv.moments(array[, binaryImage])

# 因此，可以使用以下方式计算检测到的轮廓（例如，检测到的第一个轮廓）的矩：
# M = cv2.moments(contours[0])

# 我们打印M，以查看图像矩的信息：
# {'m00': 203700.5, 'm10': 65138893.0, 'm01': 65184079.166666664, 'm20': 24157077178.583332, 'm11': 20844151188.958332, 'm02': 24186367618.25, 'm30': 9853254039349.8, 'm21': 7730082994775.5, 'm12': 7733632427205.399, 'm03': 9869218925404.75, 
# 'mu20': 3327106799.2006187, 'mu11': -268722.3380508423, 'mu02': 3327488151.551258, 'mu30': 487977833.58203125, 'mu21': -253389.3426513672, 'mu12': -458453806.3643799, 'mu03': 1109170.4453125, 
# 'nu20': 0.08018304628713532, 'nu11': -6.476189966458202e-06, 'nu02': 0.08019223685270128, 'nu30': 2.605672665422043e-05, 'nu21': -1.3530321224005687e-08, 'nu12': -2.448022162878717e-05, 'nu03': 5.9226770393023014e-08}

# 如上所示，有三种不同类型的矩，包括m_ji，mu_ji和nu_ji.
# 三种矩的计算公式（具体可见：教程网址，或者截屏图片）
# ————m_ji表示空间矩
# ————mu_ji表示中心矩
# ————nu_ji表示归一化中心矩

# 接下来，将基于矩的一些对象特征（例如，中心，偏心或轮廓的区域）。

